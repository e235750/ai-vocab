# 本番環境用 Dockerfile
FROM python:3.13-slim AS builder

# 必要なパッケージをインストール（ビルド用）
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Poetryをインストール
RUN pip install poetry

WORKDIR /app

# Poetry設定
RUN poetry config virtualenvs.create false

# 依存関係ファイルをコピー
COPY pyproject.toml poetry.lock* ./

# 本番用依存関係のみインストール
RUN poetry install --only=main --no-root

# 本番環境ステージ
FROM python:3.13-slim AS production

# ランタイムに必要な最小限のパッケージ
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# 非rootユーザーを作成
RUN groupadd --system --gid 1001 appgroup \
    && useradd --system --uid 1001 --gid appgroup --create-home appuser

WORKDIR /app

# ビルダーステージから依存関係をコピー
COPY --from=builder /usr/local/lib/python3.13/site-packages /usr/local/lib/python3.13/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# アプリケーションファイルをコピー
COPY . ./

# ファイルの所有権を変更
RUN chown -R appuser:appgroup /app

# 非rootユーザーに切り替え
USER appuser

# ポートを公開
EXPOSE 8000

# ヘルスチェックを追加
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# 本番環境で起動
CMD ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
